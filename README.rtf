{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww21320\viewh14700\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs72 \cf0 # ProteinInference
\f1\fs24 \
\

\f0\fs28 Usage: python Command_Line_PI_runner.py \
\
\
Note:\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	1.	}The script is written under Python 2.7.\
{\listtext	2.	}A Local version of GLPK/GLPSOL is required.\
{\listtext	3.	}Biopython, numpy, and matplotlib (if doing any plotting output) are necessary.\
{\listtext	4.	}Tabbed Target and Decoy results from Percolator are required.\
{\listtext	5.	}The Protein Inference code does Parsimony - Finds the minimal set of proteins given the peptides - and groups based on these lead proteins\
{\listtext	6.	}FDR and Q value calculation is also based on the lead proteins of the groups.\
{\listtext	7.	}Naming conventions are biased towards outputting Swissprot (reviewed) over Trembl (unreviewed)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
How to use:\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	1.	}Download the ProteinInference package into a specific folder\
{\listtext	2.	}Open a command terminal and cd to this folder.\
{\listtext	3.	}Type: python Command_Line_PI_runner.py  \cf2 \CocoaLigature0 -t example_percolator_target_psm.txt -d example_percolator_decoy_psm.txt -o example_output.csv -db example_db.fasta -mc 2 -dt trypsin -pl 7 -pep .9 -sm "multiplicative_log" -st "q_value" -ppk -gp "glpk" -fdr .01 -ex ["q_value_comma_sep"]\cf0 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
The 16 arguments are:\
\
-t: name of the target percolator file which contains results from the search of interest\
\
-d: name of the decoy percolator file which contains results from the search of interest\
\
-db: name of your fasta file which contains protein sequences to be digested\
\
-o: base name for the output file - name will be changed based on what parameters are chosen\
\
-mc: number of missed cleavages that were allowed on the search from mascot or comet\
\
-dt: the digestion type for the search i.e.: trypsin\
\
-pl: the peptide length to restrict by i.e.: 7, meaning peptides of length less than 7 will not be used in PI\
\
-pep: the posterior error probability value to restrict by i.e.: .9, meaning pep values greater than .9 will not be used in PI\
\
-qv: the q value to restrict value by i.e.: .2, meaning q values greater than .2 will not be used in PI\
\
-sm: the score method to choose, one of the following: \cf2 \cb3 \CocoaLigature0 'best_peptide_per_protein', 'iterative_downweighted_log', 'multiplicative_log',' downweighted_multiplicative_log', 'downweighted_version2', 'top_two_combined','geometric_mean'\
\
-st: the score type to use, can be either \'91q_value\'92 or \'91pep_value\'92\
\
-ppk: whether or not to run protein picker, which is a target-decoy analysis used for removing lower scoring targets/decoys between pairs of like targets-decoys\
\
-gp: how to do grouping can be one of the following: \'91simple_subsetting\'92, \'91glpk\'92; recommended to use \'91glpk\'92\
\
-fdr: fdr value to use as a cutoff, only useful if export type is not a q value export type\
\
-roc: filename of pdf if wanting to output a rock curve\
\
-ex: a list of export types that are wanted i.e.: \cb1 ["q_value_comma_sep\'94, \'93q_value_leads\'94, \'94all\'94]\cb3 \
\cf0 \cb1 \CocoaLigature1 \
Speed\
\
Running the full PI pipeline on a large K562 run from Lumos 1 finishes in about 5 minutes. Most of the time is spent doing the in silicon tryptic digestion of the search database.\
}